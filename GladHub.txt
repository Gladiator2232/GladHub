-- CONFIGURATION SECTION
local UIConfig = {
    MainFrameSize = UDim2.new(0, 300, 0, 100),
    MainFramePosition = UDim2.new(0.5, -150, 0.4, 0),
    FrameColor = Color3.fromRGB(50, 50, 50),
    GradientColors = {
        Color3.fromRGB(0, 255, 255),
        Color3.fromRGB(0, 100, 255)
    },
    LoadingText = {"Initializing...", "Loading Assets...", "Ready!"},
    AnimationDuration = 2, -- General duration for animations
    ExpandFrameDuration = 10,
    FadeDuration = 1.5,
    TweenStyles = {
        InStyle = Enum.EasingStyle.Back,
        InDirection = Enum.EasingDirection.Out,
        OutStyle = Enum.EasingStyle.Quad,
        OutDirection = Enum.EasingDirection.In,
    }
}

-- HELPER FUNCTIONS
local function createUICorner(parent, radius)
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = radius or UDim.new(0, 8)
    uiCorner.Parent = parent
    return uiCorner
end

local function createGradient(parent, colors)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, colors[1]),
        ColorSequenceKeypoint.new(1, colors[2])
    })
    gradient.Parent = parent
    return gradient
end

local function tweenObject(object, properties, duration, easingStyle, easingDirection)
    local tweenService = game:GetService("TweenService")
    local tweenInfo = TweenInfo.new(duration, easingStyle, easingDirection)
    local tween = tweenService:Create(object, tweenInfo, properties)
    tween:Play()
    return tween
end

local function fadeOutFrame(frame, duration, easingStyle, easingDirection)
    -- Include the main frame itself
    tweenObject(frame, {BackgroundTransparency = 1}, duration, easingStyle, easingDirection)
    
    -- Apply fade-out to all child elements
    for _, child in ipairs(frame:GetDescendants()) do
        if child:IsA("GuiObject") then
            tweenObject(child, {BackgroundTransparency = 1}, duration, easingStyle, easingDirection)
            if child:IsA("TextLabel") or child:IsA("TextButton") then
                tweenObject(child, {TextTransparency = 1}, duration, easingStyle, easingDirection)
            end
        end
    end
end

-- MAIN UI CREATION
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Parent = screenGui
mainFrame.Size = UIConfig.MainFrameSize
mainFrame.Position = UIConfig.MainFramePosition + UDim2.new(0, 0, 1, 0) -- Start off-screen below
mainFrame.BackgroundColor3 = UIConfig.FrameColor
mainFrame.BackgroundTransparency = 1 -- Invisible initially
createUICorner(mainFrame)
createGradient(mainFrame, UIConfig.GradientColors)

local textLabel = Instance.new("TextLabel")
textLabel.Parent = mainFrame
textLabel.Size = UDim2.new(1, -20, 0.5, -10)
textLabel.Position = UDim2.new(0, 10, 0, 10)
textLabel.Text = "Loading..."
textLabel.BackgroundTransparency = 1
textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
textLabel.TextScaled = true
textLabel.Font = Enum.Font.GothamBold

local progressBar = Instance.new("Frame")
progressBar.Parent = mainFrame
progressBar.Size = UDim2.new(0, 0, 0.1, 0)
progressBar.Position = UDim2.new(0, 10, 0.8, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
progressBar.BackgroundTransparency = 0
createUICorner(progressBar)

-- IN ANIMATION: Slide and Fade In
tweenObject(mainFrame, 
    {Position = UIConfig.MainFramePosition, BackgroundTransparency = 0}, 
    UIConfig.AnimationDuration, 
    UIConfig.TweenStyles.InStyle, 
    UIConfig.TweenStyles.InDirection
)

-- LOADING TEXT ANIMATION
spawn(function()
    local index = 1
    while true do
        textLabel.Text = UIConfig.LoadingText[index]
        index = (index % #UIConfig.LoadingText) + 1
        task.wait(1)
    end
end)

-- PROGRESS BAR EXPANSION
spawn(function()
    local tween = tweenObject(progressBar, {Size = UDim2.new(1, -20, 0.1, 0)}, UIConfig.ExpandFrameDuration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    tween.Completed:Wait()
    textLabel.Text = "Complete!"
    wait(1)
    -- OUT ANIMATION: Fade and Slide Out
    fadeOutFrame(mainFrame, UIConfig.FadeDuration, UIConfig.TweenStyles.OutStyle, UIConfig.TweenStyles.OutDirection)
    tweenObject(mainFrame, 
        {Position = UIConfig.MainFramePosition + UDim2.new(0, 0, 1, 0)}, 
        UIConfig.FadeDuration, 
        UIConfig.TweenStyles.OutStyle, 
        UIConfig.TweenStyles.OutDirection
    )
end)

-- TELEPORTATION LOGIC
spawn(function()
    task.wait(5) -- Wait for UI to complete animations
    if workspace:FindFirstChild("_EVENT_CHALLENGES") then
        local target = workspace._EVENT_CHALLENGES.Lobbies._lobbytemplate_event3:FindFirstChild("Barrier")
        if player and player.Character and target then
            local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                humanoidRootPart.CFrame = target.CFrame
                print("Teleport successful!")
            else
                print("HumanoidRootPart not found!")
            end
        else
            print("Target or Character missing!")
        end
    else
        print("Fallback teleport...")
        local spawnPoint = workspace._BASES.player.LANES["1"]:FindFirstChild("spawn")
        if spawnPoint then
            local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                humanoidRootPart.CFrame = spawnPoint.CFrame + Vector3.new(0, 5, 0)
            else
                print("HumanoidRootPart not found!")
            end
        else
            print("Spawn point missing!")
        end
    end
end)
